#######################################
####Installing and Importing PyPDF2####
#######################################
import PyPDF2
PDFfilename = "example.pdf" #filename of your PDF/directory where your PDF is stored
pfr = PyPDF2.PdfFileReader(open(PDFfilename, "rb")) #PdfFileReader object

####A PDF With Tables on Several Pages, But Not on Every Page####
pg4 = pfr.getPage(3) #extract pg 4
pg8 = pfr.getPage(7) #extract pg 8

writer = PyPDF2.PdfFileWriter() #create PdfFileWriter object
#add pages
writer.addPage(pg4)
writer.addPage(pg8)

NewPDFfilename = "allTables.pdf" #filename of your PDF/directory where you want your new PDF to be
with open(NewPDFfilename, "wb") as outputStream: #create new PDF
writer.write(outputStream) #write pages to new PDF

####Multiple PDFs With Tables####
import os
import PyPDF2

path = "C:/Users/Someone/Documents/allPDFs" #path to folder
#page number to extract, added 1 to reflect counting starting at 0
page = 3 
writer = PyPDF2.PdfFileWriter() #create PdfFileWriter object

for pdf in os.listdir(path):
	PDFfilename = path + "/" + pdf
	pfr = PyPDF2.PdfFileReader(open(PDFfilename, "rb")) #PdfFileReader object
	pg2 = pfr.getPage(page) #extract pg 2
	writer.addPage(pg2) #add pg 2

NewPDFfilename = "allTables.pdf" #filename of your PDF/directory where you want your new PDF to be
with open(NewPDFfilename, "wb") as outputStream: #create new PDF
	writer.write(outputStream) #write pages to new PDF

#######################################################
####Writing the Table Data to a CSV With PDFTables#####
#######################################################
import requests 
def pdfToTable(PDFfilename, apiKey, fileExt, downloadDir):
PDFfilename = 'example.pdf'
fileData = (PDFfilename, open(PDFfilename, 'rb')) #"rb" stands for "read bytes"
files = {'f': fileData} 
apiKey = "my_api_key" 
fileExt = "csv" #format/file extension of final document
postUrl = "https://pdftables.com/api?key={0}&format={1}".format(apiKey, fileExt)
#the .format puts value of apiKey where {0} is, etc
response = requests.post(postUrl, files=files)
response.raise_for_status() # ensure we notice bad responses
downloadDir = "example.csv" #directory where you want your file downloaded to 
with open(downloadDir, "wb") as f:
    f.write(response.content) #write data to csv
